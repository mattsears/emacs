;; Blackboard Theme for Emacs.
;;
;; Defines a colour scheme resembling that of the original Textmate Blackboard theme.
;; To use add the following to your .emacs file (requires the color-theme package):
;;
;; (require 'color-theme)
;; (color-theme-initialize)
;; (load-file "~/.emacs.d/color-theme/color-theme-blackboard.el")
;;
;; And then (color-theme-blackboard) to activate it.
;;
;; Several areas still require improvement such as recognition of code that ruby-mode doesn't
;; yet pick up (eg. parent classes), Rails/Merb keywords, or non Ruby code related areas
;; (eg. dired, HTML, etc). Please feel free to customize further and send in any improvements,
;; patches most welcome.
;;
;; MIT License Copyright (c) 2008 Matt Sears <matt@mattsears.com>
;; Credits due to the excellent TextMate Blackboard theme
;;
(defun color-theme-blackboard ()
  "Emacs color theme by Matt Sears, based off the TextMate Blackboard theme, created 2008-08-18"
  (interactive)
  (color-theme-install
   '(color-theme-blackboard
     ((background-color . "#0C1021")
      (background-mode . dark)
      (border-color . "#dedede")
      (cursor-color . "#AFAFAF")
      (foreground-color . "#F8F8F8")
      (mouse-color . "sienna1"))
	  (blackboard-black ((t (:foreground "#0C1021"))))
	  (blackboard-white ((t (:foreground "#F8F8F8"))))
	  (blackboard-blue ((t (:foreground "#7587A6"))))
	  (blackboard-yellow ((t (:foreground "#fce241"))))
	  (blackboard-orange ((t (:foreground "#FF6400"))))
	  (blackboard-green ((t (:foreground "#61CE3C"))))
	  (blackboard-red ((t (:foreground "#b9402a"))))
	  (blackboard-grey ((t (:foreground "#AFAFAF"))))
	  (blackboard-bg ((t (:background "#0C1021"))))
	  (blackboard-highlight ((t (:background "#344e87"))))
	  (blackboard-current-line ((t (:background "#22283c"))))

     (bold ((t (:bold t))))
     (bold-italic ((t (:bold t))))
     (border-glyph ((t (nil))))
	 (border ((t (:inherit blackboard-bg))))
     (buffers-tab ((t (:inherit blackboard-blue))))
     
     (dired-face-directory ((t (:inherit blackboard-yellow :bold t :weight bold))))
     (dired-face-executable ((t (:inherit blackboard-green))))
     (dired-face-flagged ((t (:inherit blackboard-yellow))))
     (dired-face-marked ((t (:inherit blackboard-yellow))))
     (dired-face-permissions ((t (:inherit blackboard-blue))))
     
	 ;; TODO:  Customize the shell
     ;;(eshell-prompt-face ((t ())))
     ;;(eshell-prompt ((t ())))
     ;;(eshell-ls-archive-face ((t ()))) ;%
     ;;(eshell-ls-archive ((t ()))) ;%
     ;;(eshell-ls-backup-face ((t ())))
     ;;(eshell-ls-backup ((t ())))
     ;;(eshell-ls-clutter-face ((t ())))
     ;;(eshell-ls-clutter ((t ())))
     ;;(eshell-ls-directory-face ((t ())))
     ;;(eshell-ls-directory ((t ())))
     ;;(eshell-ls-executable-face ((t ())))
     ;;(eshell-ls-executable ((t ())))
     ;;(eshell-ls-missing-face ((t ())))
     ;;(eshell-ls-missing ((t ())))
     ;;(eshell-ls-product-face ((t ())))
     ;;(eshell-ls-product ((t ())))
     ;;(eshell-ls-readonly-face ((t ())))
     ;;(eshell-ls-readonly ((t ,hober2-insignificant-face)))
     ;;(eshell-ls-special-face ((t ()))) ;%
     ;;(eshell-ls-special ((t ()))) ;%
     ;;(eshell-ls-symlink-face ((t ())))
     ;;(eshell-ls-symlink ((t ())))
     ;;(eshell-ls-unreadable-face ((t ())))
     ;;(eshell-ls-unreadable ((t ())))

     (flyspell-duplicate-face ((t (:inherit blackboard-red :underline t :weight bold))))
     (flyspell-incorrect-face ((t (:inherit blackboard-red :underline t :weight bold))))
	 (fringe ((t (:inherit blackboard-bg))))
 
     (font-lock-builtin-face ((t (:inherit blackboard-orange))))
     (font-lock-comment-face ((t (:inherit blackboard-grey))))
	 (font-lock-comment-delimiter-face ((t (:inherit blackboard-grey))))
     (font-lock-constant-face ((t (:inherit blackboard-yellow))))
     (font-lock-doc-string-face ((t (:inherit blackboard-green))))
	 (font-lock-doc-face ((t (:inherit blackboard-green))))
     (font-lock-function-name-face ((t (:inherit blackboard-orange))))
     (font-lock-keyword-face ((t (:inherit blackboard-yellow))))
     (font-lock-preprocessor-face ((t (:inherit blackboard-blue))))
     (font-lock-reference-face ((t (:inherit blackboard-blue))))
     (font-lock-regexp-grouping-backslash ((t (:inherit blackboard-orange))))
     (font-lock-regexp-grouping-construct ((t (:inherit blackboard-red))))
     (font-lock-string-face ((t (:inherit blackboard-green))))
     (font-lock-type-face ((t (:inherit blackboard-orange))))
     (font-lock-variable-name-face ((t (:inherit blackboard-blue))))
     (font-lock-warning-face ((t (:inherit blackboard-red)))) 			    
     (font-lock-negation-char-face ((t (nil))))
	 (header-line ((t (:bold t :weight bold :underline t :foreground "grey20" :box nil))))
     ;; Javascript mode
     (js2-builtin-face ((t (:inherit blackboard-white))))
     (js2-comment-face ((t (:inherit blackboard-grey))))
     (js2-constant-face ((t (:inherit blackboard-yellow))))
     (js2-error-face ((t (:inherit blackboard-red))))
     (js2-external-variable-face ((t (:inherit blackboard-yellow))))
     (js2-function-name-face ((t (:inherit blackboard-orange))))
     (js2-function-param-face ((t (:inherit blackboard-white))))
     (js2-instance-member-face ((t (:inherit blackboard-orange))))
     (js2-jsdoc-html-tag-delimiter-face ((t (:inherit blackboard-blue))))
     (js2-jsdoc-html-tag-name-face ((t (:inherit blackboard-blue))))
     (js2-jsdoc-tag-face ((t (:inherit blackboard-blue))))
     (js2-jsdoc-type-face ((t (:inherit blackboard-blue))))
     (js2-jsdoc-value-face ((t (:inherit blackboard-white))))
     (js2-keyword-face ((t (:inherit blackboard-yellow))))
     (js2-private-function-call-face ((t (:inherit blackboard-orange))))
     (js2-private-member-face ((t (:inherit blackboard-orange))))
     (js2-regexp-face ((t (:inherit blackboard-red))))
     (js2-string-face ((t (:inherit blackboard-green))))
     (js2-type-face ((t (:inherit blackboard-yellow))))
     (js2-variable-name-face ((t (:inherit blackboard-orange))))
     (js2-warning-face ((t (:inherit blackboard-red))))

	 (isearch ((t (:inherit blackboard-highlight))))
     (isearch-lazy-highlight-face ((t (:inherit blackboard-highlight))))
     (isearch-secondary ((t (:inherit blackboard-highlight))))
     (isearch-fail ((t (:inherit blackboard-red))))
 
	 ;;(lazy-highlight ((t ()))
     ;;(iswitchb-current-match ((t ())))
     ;;(iswitchb-single-match ((t ())))
     ;;(iswitchb-invalid-regexp ((t ())))
     ;;(iswitchb-virtual-matches ((t ())))
     
     ;;(ibuffer-deletion-face . font-lock-warning-face)
     ;;(ibuffer-filter-group-name-face . bold)
     ;;(ibuffer-marked-face . font-lock-comment-face)
     ;;(ibuffer-title-face . dired-header)

	 (ido-first-match ((t (:inherit blackboard-green))))
	 (ido-first-match-face ((t (:inherit blackboard-yellow))))
	 (ido-incomplete-regexp ((t (:box (:line-width 1 :color "red4") :foreground "red2"))))
	 (ido-indicator ((t (:inherit blackboard-yellow))))
	 (ido-indicator-face ((t (:inherit blackboard-red))))
	 (ido-only-match ((t (:inherit blackboard-green))))
	 (ido-only-match-face ((t (:inherit blackboard-green))))
	 (ido-subdir ((t (:inherit blackboard-yellow))))
	 (ido-subdir-face ((t (:inherit blackboard-blue))))
	
	 (nxml-name-face ((t (:inherit blackboard-blue))))
	 (nxml-comment-content-face ((t (:inherit blackboard-grey))))
	 (nxml-markup-declaration-delimiter-face ((t (:inherit blackboard-grey))))
	 (nxml-name ((t (:inherit blackboard-blue))))
     (nxml-ref ((t (:inherit blackboard-blue))))
	 (nxml-ref-face ((t (:inherit blackboard-blue))))
     (nxml-delimiter ((t (:inherit blackboard-blue))))
     (nxml-delimiter-face ((t (:inherit blackboard-blue))))
     (nxml-text ((t (:inherit blackboard-blue))))
	 (nxml-text-face ((t (:inherit blackboard-white))))
	 (nxml-delimited-data ((t (:inherit font-lock-string))))
	 (nxml-delimited-data-face ((t (:inherit blackboard-blue))))
	 (nxml-tag-delimiter-face ((t (:inherit blackboard-blue))))
     (nxml-attribute-value ((t (:inherit blackboard-green))))
	 (nxml-attribute-value-face ((t (:inherit blackboard-green))))
     (nxml-attribute-value-delimiter ((t (:inherit blackboard-green))))
	 (nxml-attribute-prefix ((t (:inherit blackboard-blue))))
	 (nxml-attribute-prefix-face ((t (:inherit blackboard-green))))
     (nxml-attribute-local-name ((t (:inherit blackboard-green))))
	 (nxml-comment-content ((t (:inherit blackboard-grey))))
	 (nxml-comment-delimiter ((t (:inherit blackboard-grey))))
	 (nxml-comment-delimiter-face ((t (:inherit blackboard-grey))))
	 (nxml-processing-instruction-target ((t (:inherit blackboard-blue))))
	 (nxml-processing-instruction-delimiter ((t (:inherit nxml-processing-instruction-target))))
	 (nxml-processing-instruction-content ((t (:inherit nxml-processing-instruction-target))))
	 (nxml-cdata-section-CDATA ((t (:inherit blackboard-grey))))
	 (nxml-cdata-section-delimiter ((t (:inherit nxml-cdata-section-CDATA))))
	 (nxml-cdata-section-content ((t (:inherit nxml-text))))
	 (nxml-entity-ref-name((t (:inherit blackboard-blue))))
	 (nxml-entity-ref-delimiter ((t (:inherit nxml-entity-ref-name))))
	 (nxml-char-ref-number ((t (:inherit nxml-entity-ref-name))))
	 (nxml-char-ref-delimiter ((t (:inherit nxml-entity-ref-delimiter))))
	 (nxml-tag-delimiter ((t (:inherit blackboard-blue))))
	 (nxml-tag-slash ((t (:inherit blackboard-blue))))
	 (nxml-element-local-name ((t (:inherit blackboard-blue))))
	 (nxml-element-prefix ((t (:inherit blackboard-blue))))
	 (nxml-element-colon ((t (:inherit blackboard-blue))))
	 (nxml-namespace-attribute-prefix ((t (:inherit blackboard-blue))))
	 (nxml-namespace-attribute-xmlns ((t (:inherit nxml-attribute-prefix))))
	 (nxml-attribute-colon ((t (:inherit blackboard-blue))))
	 (nxml-namespace-attribute-colon ((t (:inherit nxml-attribute-colon))))
	 (nxml-hash-face ((t (:inherit blackboard-yellow))))
	
	 (erb-section ((t (:inherit blackboard-bg)))) 
	 (erb-delim-face ((t (:inherit blackboard-bg))))
     (erb-face ((t (:inherit blackboard-bg))))
     (erb-out-delim-face ((t (:inherit blackboard-bg))))

	 (mmm-code-submode-face ((t (:box (:line-width 1 :color "Purple")))))
	 (mmm-comment-submode-face ((t (:foreground "Firebrick" :box (:line-width 1 :color "Firebrick")))))
	 (mmm-default-submode-face ((t (:background "#0C1021"))))
	 (mmm-output-submode-face ((t (:box (:line-width 1 :color "#0000a0")))))
	
     ;;(paren-face-match ((t ())))
     ;;(paren-face-mismatch ((t ())))
     ;;(paren-face-no-match ((t ())))
     ;;(paren-face ((t ())))

     (region ((t (:inherit blackboard-highlight))))
     (mode-line ((t (:background "#fdfdfd" :foreground "#888888"))))
	 (mode-line-inactive ((t (:foreground "#cccddd" :background "#222222"))))
     (highlight ((t (:inherit blackboard-current-line))))
     (highline-face ((t (:inherit blackboard-highlight))))
	 (minibuffer-prompt ((t (:inherit blackboard-blue))))
	 (show-paren-match-face ((t (nil))))
     (show-paren-match-face ((t (:inherit blackboard-highlight))))
     (show-paren-mismatch-face ((t (:inherit blackboard-red))))
     (italic ((t (nil))))
     (left-margin ((t (nil))))
     (underline ((nil (:underline nil))))
     (vertical-border ((t (nil))))
     (scroll-bar ((t (:background "fdfdfd"))))
	 (semantic-dirty-token-face ((t (:inherit blackboard-grey))))
	 (semantic-unmatched-syntax-face ((t (nil))))
	 (shell-option-face ((t (:inherit blackboard-green))))
	 (shell-output-1-face ((t (:inherit blackboard-green))))
     (shell-output-2-face ((t (:inherit blackboard-green))))
     (shell-output-3-face ((t (:inherit blackboard-grey))))
     (shell-output-face ((t (:inherit blackboard-green))))
     (shell-prompt-face ((t (:inherit blackboard-green))))
     (zmacs-region ((t (:inherit blackboard-blue)))))))
